name: üöÄ Build & Deploy Azure Function (Docker)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: pdf-converter-2
      IMAGE_TAG: latest
      ACR_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üîê Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üê≥ Docker Login to ACR
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login $ACR_LOGIN_SERVER \
            --username ${{ secrets.ACR_USERNAME }} \
            --password-stdin

      - name: üèóÔ∏è Build Docker image
        run: |
          docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG .

      - name: üì§ Push to ACR
        run: |
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG

      - name: ‚òÅÔ∏è Create Function App if it doesn't exist
        run: |
          if ! az functionapp show --name ${{ secrets.FUNCTIONAPP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} &> /dev/null; then
            az functionapp create \
              --name ${{ secrets.FUNCTIONAPP_NAME }} \
              --resource-group ${{ secrets.RESOURCE_GROUP }} \
              --plan ${{ secrets.APP_SERVICE_PLAN }} \
              --storage-account ${{ secrets.STORAGE_ACCOUNT }} \
              --runtime custom \
              --functions-version 4 \
              --os-type Linux
          fi
          
      - name: ‚öôÔ∏è Configure Azure Function to use container
        run: |
          az functionapp config container set \
            --name ${{ secrets.FUNCTIONAPP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --image $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG \
            --registry-server https://$ACR_LOGIN_SERVER \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}
